syntax enable
set nocompatible
nore ; :
nore : ;
set encoding=utf-8
set fileencoding=utf-8
set relativenumber
set number
set hidden
set ignorecase smartcase
" remove search highlight
set hlsearch
set incsearch
nore ^ 0
nore 0 ^
nnoremap x "_x
vnoremap x "_x
inoremap <s-Tab> <c-d>
set laststatus=2
cnore <c-b> <c-a>
cnore <c-a> <c-b>
nnoremap <up> <c-y>
nnoremap <down> <c-e>
nnoremap  <silent>   <tab>  :bnext<CR>
nnoremap <silent> <s-tab> :bprevious<CR>
set tabstop=4    "Number of spaces that a <Tab> in the file counts for"
set expandtab
set shiftwidth=4
set textwidth=0
set wrapmargin=0
set formatoptions-=t
set autoindent

set statusline=\ %f%m%r%h%w\ %=%({%{&ff}\|%{(&fenc==\"\"?&enc:&fenc).((exists(\"+bomb\")\ &&\ &bomb)?\",B\":\"\")}%k\|%Y}%)\ %([%l,%v][%p%%]\ %)

let mapleader=' '

vmap <tab> >gv
vmap <s-tab> <gv
imap <S-tab> <C-d>
nnoremap <silent> <leader>n :noh<CR>
nnoremap x "_x
nnoremap X "_X
vnoremap x "_x
vnoremap X "_X

set wrap linebreak nolist
"j/k enter wrapped lines
nnoremap j gj
nnoremap k gk

vnoremap j gj
vnoremap k gk
" ctrl+j breaks line
nnoremap <c-j> a<CR><Esc>k$ 

autocmd BufRead,BufNewFile *.hsc set filetype=haskell
autocmd BufRead,BufNewFile *.h   set syntax=c
colors solarized
